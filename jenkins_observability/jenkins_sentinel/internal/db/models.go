// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package db

import (
	"github.com/jackc/pgx/v5/pgtype"
)

// Stores anomaly detection results for pipeline metrics
type AnomalyScore struct {
	ID           int32  `json:"id"`
	PipelineName string `json:"pipeline_name"`
	// Links to specific build, NULL for aggregated metrics
	BuildNumber  pgtype.Int4        `json:"build_number"`
	MetricName   string             `json:"metric_name"`
	DetectorName string             `json:"detector_name"`
	Timestamp    pgtype.Timestamptz `json:"timestamp"`
	// Original metric value that was analyzed
	Value float64 `json:"value"`
	// Anomaly score from detector (e.g., z-score, isolation score)
	Score float64 `json:"score"`
	// Threshold used for this detection
	Threshold float64 `json:"threshold"`
	// Whether this point was flagged as anomalous
	IsAnomaly bool               `json:"is_anomaly"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
}

type Build struct {
	ID             int32              `json:"id"`
	PipelineName   string             `json:"pipeline_name"`
	BuildNumber    int32              `json:"build_number"`
	BuildStartTime pgtype.Timestamptz `json:"build_start_time"`
	BuildEndTime   pgtype.Timestamptz `json:"build_end_time"`
	Status         string             `json:"status"`
	LastUpdated    pgtype.Timestamptz `json:"last_updated"`
	ErrorLog       pgtype.Text        `json:"error_log"`
	CreatedAt      pgtype.Timestamptz `json:"created_at"`
	UpdatedAt      pgtype.Timestamptz `json:"updated_at"`
	// Username or ID of who/what triggered the build
	TriggeredBy pgtype.Text `json:"triggered_by"`
	// Actual build execution time in seconds including subtasks (from executingTimeMillis)
	BuildingTimeSeconds pgtype.Float8 `json:"building_time_seconds"`
	// Time in seconds blocked waiting for resources including subtasks
	BlockedTimeSeconds pgtype.Float8 `json:"blocked_time_seconds"`
	// Time in seconds buildable but waiting for executor including subtasks
	BuildableTimeSeconds pgtype.Float8 `json:"buildable_time_seconds"`
	// Time in seconds in waiting state including subtasks
	WaitingTimeSeconds pgtype.Float8 `json:"waiting_time_seconds"`
}

type BuildQueue struct {
	ID               int32              `json:"id"`
	JobPath          string             `json:"job_path"`
	BuildNumber      int32              `json:"build_number"`
	LastAttemptAt    pgtype.Timestamptz `json:"last_attempt_at"`
	ErrorMessage     pgtype.Text        `json:"error_message"`
	CollectionTime   pgtype.Timestamptz `json:"collection_time"`
	CollectionStatus string             `json:"collection_status"`
	CreatedAt        pgtype.Timestamptz `json:"created_at"`
	UpdatedAt        pgtype.Timestamptz `json:"updated_at"`
}
