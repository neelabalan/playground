// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: copyfrom.go

package db

import (
	"context"
)

// iteratorForCreateAnomalyScores implements pgx.CopyFromSource.
type iteratorForCreateAnomalyScores struct {
	rows                 []CreateAnomalyScoresParams
	skippedFirstNextCall bool
}

func (r *iteratorForCreateAnomalyScores) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForCreateAnomalyScores) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].PipelineName,
		r.rows[0].BuildNumber,
		r.rows[0].MetricName,
		r.rows[0].DetectorName,
		r.rows[0].Timestamp,
		r.rows[0].Value,
		r.rows[0].Score,
		r.rows[0].Threshold,
		r.rows[0].IsAnomaly,
	}, nil
}

func (r iteratorForCreateAnomalyScores) Err() error {
	return nil
}

func (q *Queries) CreateAnomalyScores(ctx context.Context, arg []CreateAnomalyScoresParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"anomaly_scores"}, []string{"pipeline_name", "build_number", "metric_name", "detector_name", "timestamp", "value", "score", "threshold", "is_anomaly"}, &iteratorForCreateAnomalyScores{rows: arg})
}
